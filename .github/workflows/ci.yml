---
name: "Generate Nautobot DB Dumps"
on: # yamllint disable-line rule:truthy rule:comments
  workflow_dispatch:

env:
  APP_NAME: "nautobot-db-dumps"

jobs:
  generate-db-dumps:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        db-backend: ["postgresql", "mysql"]
        nautobot-version: ["1.6.0", "2.0.0", "2.1.0", "2.2.0", "2.3.0", "2.4.0", "latest"]
    runs-on: "ubuntu-22.04"
    env:
      INVOKE_NAUTOBOT_DB_DUMPS_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_NAUTOBOT_DB_DUMPS_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Pip install invoke"
        run: "pip install invoke"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v3"
      - name: "Build"
        uses: "docker/build-push-action@v5"
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          load: true
          tags: "${{ env.APP_NAME }}/nautobot:${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          cache-to: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ matrix.python-version }}
            CI=true
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Use Mysql invoke settings when needed"
        run: "cp invoke.mysql.yml invoke.yml"
        if: "matrix.db-backend == 'mysql'"
      - name: "Migrate database"
        run: "invoke migrate"
      - name: "Dump database"
        run: "invoke backup-db"
      - name: Upload database dumps
        uses: actions/upload-artifact@v4
        with:
          name: "nautobot-db-dumps-${{ matrix.nautobot-version }}-${{ matrix.db-backend }}"
          path: "/tmp/db_dumps/*.sql"
  publish_gh:
    needs:
      - "generate-db-dumps"
    name: "Commit dumps to dumps branch"
    runs-on: "ubuntu-22.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          ref: "dumps"
      - name: "Download database dumps"
        uses: actions/download-artifact@v4
      - name: "Commit and push database dumps"
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git rm *.sql --ignore-unmatch
          git add *.sql
          git commit -m "Commit generated sql dumps"
          git push -u origin dumps
